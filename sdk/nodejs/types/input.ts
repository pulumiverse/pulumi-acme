// *** WARNING: this file was generated by the Pulumi Terraform Bridge (tfgen) Tool. ***
// *** Do not edit by hand unless you're certain you know what you are doing! ***

import * as pulumi from "@pulumi/pulumi";
import * as inputs from "../types/input";
import * as outputs from "../types/output";

export interface CertificateDnsChallenge {
    config?: pulumi.Input<{[key: string]: pulumi.Input<string>}>;
    provider: pulumi.Input<string>;
}

export interface CertificateHttpChallenge {
    /**
     * The port that the challenge server listens on. Default: `80`.
     */
    port?: pulumi.Input<number>;
    /**
     * The proxy header to match against. Default:
     * `Host`.
     *
     * The `proxyHeader` option behaves differently depending on its definition:
     *
     * * When set to `Host`, standard host header validation is used.
     * * When set to `Forwarded`, the server looks in the `Forwarded` header for a
     * section matching `host=DOMAIN` where `DOMAIN` is the domain currently being
     * resolved by the challenge. See [RFC 7239](https://tools.ietf.org/html/rfc7239)
     * for more details.
     * * When set to an arbitrary header (example: `X-Forwarded-Host`), that header is
     * checked for the host entry in the same way the host header would normally be
     * checked.
     */
    proxyHeader?: pulumi.Input<string>;
}

export interface CertificateHttpMemcachedChallenge {
    hosts: pulumi.Input<pulumi.Input<string>[]>;
}

export interface CertificateHttpS3Challenge {
    /**
     * The s3Bucket to publish the record to.
     */
    s3Bucket: pulumi.Input<string>;
}

export interface CertificateHttpWebrootChallenge {
    /**
     * The directory to publish the record to.
     */
    directory: pulumi.Input<string>;
}

export interface CertificateTlsChallenge {
    /**
     * The port that the challenge server listens on. Default: `443`.
     */
    port?: pulumi.Input<number>;
}

export interface RegistrationExternalAccountBinding {
    hmacBase64: pulumi.Input<string>;
    keyId: pulumi.Input<string>;
}
